{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Gary\\\\Documents\\\\UltraGo\\\\client\\\\src\\\\utils\\\\privateRoute.js\";\nimport { Outlet, Navigate } from \"react-router-dom\";\nimport Cookie from \"js-cookie\";\nimport authService from \"../services/auth\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PrivateRoute = () => {\n  // const [isLoggedIn, setIsLoggedIn] = useState(false);\n\n  console.log(\"check user.....\", authService.getCurrentUser().accessToken);\n\n  // if (Cookie.get(\"accessToken\") === authService.getCurrentUser().accessToken) {\n  //    setIsLoggedIn(true);\n  // }\n  return Cookie.get(\"accessToken\") ? /*#__PURE__*/_jsxDEV(Outlet, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 39\n  }, this) : /*#__PURE__*/_jsxDEV(Navigate, {\n    to: \"/\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 52\n  }, this);\n};\n_c = PrivateRoute;\nexport default PrivateRoute;\nvar _c;\n$RefreshReg$(_c, \"PrivateRoute\");","map":{"version":3,"names":["Outlet","Navigate","Cookie","authService","useState","jsxDEV","_jsxDEV","PrivateRoute","console","log","getCurrentUser","accessToken","get","fileName","_jsxFileName","lineNumber","columnNumber","to","_c","$RefreshReg$"],"sources":["C:/Users/Gary/Documents/UltraGo/client/src/utils/privateRoute.js"],"sourcesContent":["import { Outlet, Navigate } from \"react-router-dom\";\r\nimport Cookie from \"js-cookie\";\r\nimport authService from \"../services/auth\";\r\nimport { useState } from \"react\";\r\n\r\nconst PrivateRoute = () => {\r\n   // const [isLoggedIn, setIsLoggedIn] = useState(false);\r\n\r\n   console.log(\"check user.....\", authService.getCurrentUser().accessToken);\r\n\r\n   // if (Cookie.get(\"accessToken\") === authService.getCurrentUser().accessToken) {\r\n   //    setIsLoggedIn(true);\r\n   // }\r\n   return Cookie.get(\"accessToken\") ? <Outlet /> : <Navigate to=\"/\" />;\r\n};\r\n\r\nexport default PrivateRoute;\r\n"],"mappings":";AAAA,SAASA,MAAM,EAAEC,QAAQ,QAAQ,kBAAkB;AACnD,OAAOC,MAAM,MAAM,WAAW;AAC9B,OAAOC,WAAW,MAAM,kBAAkB;AAC1C,SAASC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjC,MAAMC,YAAY,GAAGA,CAAA,KAAM;EACxB;;EAEAC,OAAO,CAACC,GAAG,CAAC,iBAAiB,EAAEN,WAAW,CAACO,cAAc,EAAE,CAACC,WAAW,CAAC;;EAExE;EACA;EACA;EACA,OAAOT,MAAM,CAACU,GAAG,CAAC,aAAa,CAAC,gBAAGN,OAAA,CAACN,MAAM;IAAAa,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAAG,gBAAGV,OAAA,CAACL,QAAQ;IAACgB,EAAE,EAAC;EAAG;IAAAJ,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAAG;AACtE,CAAC;AAACE,EAAA,GATIX,YAAY;AAWlB,eAAeA,YAAY;AAAC,IAAAW,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}